#include <stdio.h>

int main()
{
	//int a;
	//printf("size = %d \n", sizeof(a));  //size = 4 

	//int a = 0x12345678;

	/*
	int a = 0;
	double b = 0;
	printf("%08X \n", &a); //使用十六进制打印
	printf("%08X \n", &b);

	//也可以
	printf("%p \n", &a); // p: pointer
	*/


	//int a = 10;
	//int* p = &a;


	int a = 0x1314;
	int* p = &a;  // p指向a所在的内存
	//*p += 2;  //
	//printf("*p = %08X \n", *p);   //*p = 00001316


	int b = *p;  // 取得p指向内存的值
	int c = *p + 2;
	printf("%08x", c);
	return 0;
}
/*
-内存用于存储数据，最小单元是字节（8bit)，每个单元都有一个编号（即地址: 0x00000000~0xFFFFFFFF）

- 变量有大小(sizeof操作符, int大小是4)，变量的大小指的是它在内存中占了几个字节。

- 变量有地址，变量的地址就是该变量在内存中的位置 。 用&号可以取得地址

- 变量赋值，就是向内存写入数据。读变量的值，就是从内存读取数据。

- 每个变量都有自己的内存地址，绝不会有2个变量的内存地址相同。（一个萝卜一个坑。。。）

- 程序每次运行时，变量的地址是不一样的，无法预测也不需要预测其地址。
*/

/*
#### 查看变量内存地址:

设置断点, 运行, 在 `调试 - 窗口 - 内存` 中查看变量a 的内存情况, 在 `内存` 查看器中输入 `&a` 回车即可得到内存地址和存储数据;

给变量重赋值就是修改变量的内存地址;
*/

/*
## 如何表示地址？

地址是整数，是否可以用 int ? （理论上可以。。。）
但是为了强调它是个内存地址，提出一些新的类型。。。

char*  :  表示一个char型变量的地址
short* :  表示一个short型变量的地址
int*   :  表示一个int型变量的地址
float* :  表示一个float型变量的地址
double*:  表示一个double型变量的地址
unsigned char*: 表示一个unsigned char型变量的地址
...
XXX*   : 表示XXX型变量的地址

以下以int型变量为例：

int a = 10;
int* pa = &a;
定义一个变量pa，类型为int*，初始值为&a。

有两种叫法：
pa指向了一个int型变量
pa所在的内存是一个int型整数

我们称int*为指针类型，pa为指针类型的变量(简称指针)
*/